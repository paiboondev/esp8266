#include <FirebaseESP8266.h>  // Install Firebase ESP8266 library
#include <ESP8266WiFi.h>
#include <DHT.h>              // Install DHT11 Library
#include <time.h>

#define FIREBASE_HOST "dht11-b9333-default-rtdb.firebaseio.com"    
#define FIREBASE_AUTH "DAtAzH9CJVuwNKP8Bdke4MfIc8S5B2phv1KAaGCj"
#define WIFI_SSID "AUTo_WiFi"
#define WIFI_PASSWORD "45554555"

#define DHTPIN 2    // Connect Data pin of DHT to D4(GPIO2)
//int led = D5;     // Connect LED to D5
DHT dht;

//Define FirebaseESP8266 data object
FirebaseData firebaseData;
FirebaseJson data;

// Config time
int timezone = 7;      //TimeZone Thailand
char ntp_server1[20] = "ntp.ku.ac.th";
char ntp_server2[20] = "fw.eng.ku.ac.th";
char ntp_server3[20] = "time.uni.net.th";
int dst = 0;

void setup()
{
  Serial.begin(9600);
  dht.setup(2); // data pin 2 (D4)

  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to Wi-Fi");
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print(".");
    delay(300);
  }

  Serial.println();
  Serial.print("Connected with IP: ");
  Serial.println(WiFi.localIP());
  Serial.println();

  configTime(timezone * 3600, dst, ntp_server1, ntp_server2, ntp_server3);
  Serial.println("Waiting for time");
  while (!time(nullptr)) {
    Serial.print(".");
    delay(500);
  }

  Serial.println();

  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
  Firebase.reconnectWiFi(true);
}

void sensorUpdate() {
  float h = dht.getHumidity();
  float t = dht.getTemperature();
  String  ts = NowString();

  if (isnan(h) || isnan(t)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }

  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  Serial.print(F("C  ,"));
  Serial.print(F(" Time: "));
  Serial.println(ts);

  data.set("temperature", t);
  data.set("humidity", h);
  data.set("time", ts);

  if (Firebase.pushJSON(firebaseData, "/logDHT", data))
  {
    Serial.println("PASSED");
    Serial.println("PATH: " + firebaseData.dataPath());
    Serial.println("TYPE: " + firebaseData.dataType());
    Serial.println("ETag: " + firebaseData.ETag());
    Serial.println("------------------------------------");
    Serial.println();
  }
  else
  {
    Serial.println("FAILED");
    Serial.println("REASON: " + firebaseData.errorReason());
    Serial.println("------------------------------------");
    Serial.println();
  }

}
String NowString() {
  time_t now = time(nullptr);
  struct tm* newtime = localtime(&now);

  String tmpNow = "";
  tmpNow += String(newtime->tm_year + 1900);
  tmpNow += "-";
  tmpNow += String(newtime->tm_mon + 1);
  tmpNow += "-";
  tmpNow += String(newtime->tm_mday);
  tmpNow += " ";
  tmpNow += String(newtime->tm_hour);
  tmpNow += ":";
  tmpNow += String(newtime->tm_min);
  tmpNow += ":";
  tmpNow += String(newtime->tm_sec);
  return tmpNow;
}

void loop() {
  sensorUpdate();
  delay(30000);
}
